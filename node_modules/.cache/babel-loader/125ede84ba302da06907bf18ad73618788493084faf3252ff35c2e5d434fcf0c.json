{"ast":null,"code":"/**\n * SM-2 Algorithmus f√ºr Spaced Repetition\n * Basiert auf dem SuperMemo-2 Algorithmus von Piotr Wozniak\n *//**\n * Berechnet die n√§chsten SM-2 Parameter basierend auf der Antwortqualit√§t\n * @param vocab - Die aktuelle Vokabel\n * @param quality - Qualit√§t der Antwort (0-5)\n *   0: Totaler Blackout\n *   1: Falsche Antwort, aber richtige schien vertraut\n *   2: Falsche Antwort, aber richtige war leicht zu merken\n *   3: Richtige Antwort, aber mit ernsthaften Schwierigkeiten\n *   4: Richtige Antwort nach etwas Z√∂gern\n *   5: Perfekte Antwort\n * @returns Neue SM-2 Parameter\n */export function calculateSM2(vocab,quality){const{sm2}=vocab;const now=new Date().toISOString();// Validierung der Qualit√§t\nif(quality<0||quality>5){throw new Error('Quality muss zwischen 0 und 5 liegen');}let newEaseFactor=sm2.easeFactor;let newInterval=sm2.interval;let newRepetitions=sm2.repetitions;// Bei Qualit√§t < 3: Wiederholung von vorne beginnen\nif(quality<3){newRepetitions=0;newInterval=1;}else{// Erfolgreiche Antwort\nnewRepetitions+=1;// Intervall-Berechnung basierend auf Wiederholungsanzahl\nif(newRepetitions===1){newInterval=1;}else if(newRepetitions===2){newInterval=6;}else{newInterval=Math.round(sm2.interval*newEaseFactor);}}// Ease Factor Anpassung (nur bei Qualit√§t >= 3)\nif(quality>=3){newEaseFactor=newEaseFactor+(0.1-(5-quality)*(0.08+(5-quality)*0.02));}// Ease Factor darf nicht unter 1.3 fallen\nif(newEaseFactor<1.3){newEaseFactor=1.3;}// N√§chstes Review-Datum berechnen\nconst nextReviewDate=new Date();nextReviewDate.setDate(nextReviewDate.getDate()+newInterval);return{easeFactor:Math.round(newEaseFactor*100)/100,// Auf 2 Dezimalstellen runden\ninterval:newInterval,repetitions:newRepetitions,nextReview:nextReviewDate.toISOString(),lastReview:now};}/**\n * Pr√ºft ob eine Vokabel zur Wiederholung f√§llig ist\n */export function isDue(vocab){if(!vocab.sm2.nextReview){return true;// Neue Vokabeln sind immer f√§llig\n}const now=new Date();const nextReview=new Date(vocab.sm2.nextReview);return now>=nextReview;}/**\n * Filtert Vokabeln die zur Wiederholung f√§llig sind (mit Debug)\n */export function getDueVocabulary(vocabulary){console.log(\"\\uD83D\\uDD0D Pr\\xFCfe \".concat(vocabulary.length,\" Vokabeln auf F\\xE4lligkeit...\"));const due=vocabulary.filter(vocab=>{const result=isDue(vocab);if(vocabulary.length<=10){// Nur bei wenigen Vokabeln detailliert loggen\nconsole.log(\"  \".concat(vocab.kanji,\" (\").concat(vocab.id,\"): repetitions=\").concat(vocab.sm2.repetitions,\", nextReview=\").concat(vocab.sm2.nextReview,\", isDue=\").concat(result));}return result;});console.log(\"\\uD83D\\uDCCA Ergebnis: \".concat(due.length,\" von \").concat(vocabulary.length,\" Vokabeln sind f\\xE4llig\"));return due;}/**\n * Sortiert Vokabeln nach Priorit√§t (√ºberf√§llige zuerst, dann nach Schwierigkeit)\n */export function sortByPriority(vocabulary){const now=new Date();return[...vocabulary].sort((a,b)=>{const aNextReview=a.sm2.nextReview?new Date(a.sm2.nextReview):new Date(0);const bNextReview=b.sm2.nextReview?new Date(b.sm2.nextReview):new Date(0);// √úberf√§llige Vokabeln zuerst\nconst aOverdue=now.getTime()-aNextReview.getTime();const bOverdue=now.getTime()-bNextReview.getTime();if(aOverdue!==bOverdue){return bOverdue-aOverdue;// Mehr √ºberf√§llig = h√∂here Priorit√§t\n}// Bei gleicher √úberf√§lligkeit: niedrigerer Ease Factor = h√∂here Priorit√§t\nreturn a.sm2.easeFactor-b.sm2.easeFactor;});}/**\n * Gibt Statistiken √ºber den Lernfortschritt zur√ºck\n */export function getLearningStats(vocabulary){const now=new Date();const stats={total:vocabulary.length,new:0,learning:0,review:0,due:0,overdue:0,mastered:0};vocabulary.forEach(vocab=>{const{sm2}=vocab;// Neue Vokabeln (noch nie gelernt)\nif(sm2.repetitions===0){stats.new++;if(!sm2.nextReview||new Date(sm2.nextReview)<=now){stats.due++;}return;}// Lernphase (1-2 Wiederholungen)\nif(sm2.repetitions<=2){stats.learning++;}else if(sm2.repetitions>=5&&sm2.easeFactor>=2.5){// Gemeistert (5+ Wiederholungen mit gutem Ease Factor)\nstats.mastered++;}else{// Wiederholung\nstats.review++;}// F√§lligkeitspr√ºfung\nif(sm2.nextReview){const nextReview=new Date(sm2.nextReview);if(nextReview<=now){stats.due++;// √úberf√§llig (mehr als 1 Tag)\nconst daysDiff=(now.getTime()-nextReview.getTime())/(1000*60*60*24);if(daysDiff>1){stats.overdue++;}}}});return stats;}/**\n * Zentrale Farblogik f√ºr Qualit√§tswerte (0-5)\n */export const QUALITY_COLORS=[{value:0,label:'Keine Ahnung',tailwind:'bg-rose-400',hex:'#fb7185'},{value:1,label:'Falsch aber vertraut',tailwind:'bg-rose-500',hex:'#f43f5e'},{value:2,label:'Falsch aber erinnert',tailwind:'bg-amber-400',hex:'#fbbf24'},{value:3,label:'Richtig aber m√ºhsam',tailwind:'bg-amber-500',hex:'#f59e42'},{value:4,label:'Richtig nach Z√∂gern',tailwind:'bg-teal-500',hex:'#14b8a6'},{value:5,label:'Sofort richtig',tailwind:'bg-emerald-500',hex:'#10b981'}];","map":{"version":3,"names":["calculateSM2","vocab","quality","sm2","now","Date","toISOString","Error","newEaseFactor","easeFactor","newInterval","interval","newRepetitions","repetitions","Math","round","nextReviewDate","setDate","getDate","nextReview","lastReview","isDue","getDueVocabulary","vocabulary","console","log","concat","length","due","filter","result","kanji","id","sortByPriority","sort","a","b","aNextReview","bNextReview","aOverdue","getTime","bOverdue","getLearningStats","stats","total","new","learning","review","overdue","mastered","forEach","daysDiff","QUALITY_COLORS","value","label","tailwind","hex"],"sources":["/home/alex/italvoc/src/utils/sm2Algorithm.ts"],"sourcesContent":["import { VocabularyCard } from '../types/vocabulary';\n\n/**\n * SM-2 Algorithmus f√ºr Spaced Repetition\n * Basiert auf dem SuperMemo-2 Algorithmus von Piotr Wozniak\n */\n\nexport interface SM2Result {\n  easeFactor: number;\n  interval: number;\n  repetitions: number;\n  nextReview: string;\n  lastReview: string;\n}\n\n/**\n * Berechnet die n√§chsten SM-2 Parameter basierend auf der Antwortqualit√§t\n * @param vocab - Die aktuelle Vokabel\n * @param quality - Qualit√§t der Antwort (0-5)\n *   0: Totaler Blackout\n *   1: Falsche Antwort, aber richtige schien vertraut\n *   2: Falsche Antwort, aber richtige war leicht zu merken\n *   3: Richtige Antwort, aber mit ernsthaften Schwierigkeiten\n *   4: Richtige Antwort nach etwas Z√∂gern\n *   5: Perfekte Antwort\n * @returns Neue SM-2 Parameter\n */\nexport function calculateSM2(vocab: VocabularyCard, quality: number): SM2Result {\n  const { sm2 } = vocab;\n  const now = new Date().toISOString();\n  \n  // Validierung der Qualit√§t\n  if (quality < 0 || quality > 5) {\n    throw new Error('Quality muss zwischen 0 und 5 liegen');\n  }\n  \n  let newEaseFactor = sm2.easeFactor;\n  let newInterval = sm2.interval;\n  let newRepetitions = sm2.repetitions;\n  \n  // Bei Qualit√§t < 3: Wiederholung von vorne beginnen\n  if (quality < 3) {\n    newRepetitions = 0;\n    newInterval = 1;\n  } else {\n    // Erfolgreiche Antwort\n    newRepetitions += 1;\n    \n    // Intervall-Berechnung basierend auf Wiederholungsanzahl\n    if (newRepetitions === 1) {\n      newInterval = 1;\n    } else if (newRepetitions === 2) {\n      newInterval = 6;\n    } else {\n      newInterval = Math.round(sm2.interval * newEaseFactor);\n    }\n  }\n  \n  // Ease Factor Anpassung (nur bei Qualit√§t >= 3)\n  if (quality >= 3) {\n    newEaseFactor = newEaseFactor + (0.1 - (5 - quality) * (0.08 + (5 - quality) * 0.02));\n  }\n  \n  // Ease Factor darf nicht unter 1.3 fallen\n  if (newEaseFactor < 1.3) {\n    newEaseFactor = 1.3;\n  }\n  \n  // N√§chstes Review-Datum berechnen\n  const nextReviewDate = new Date();\n  nextReviewDate.setDate(nextReviewDate.getDate() + newInterval);\n  \n  return {\n    easeFactor: Math.round(newEaseFactor * 100) / 100, // Auf 2 Dezimalstellen runden\n    interval: newInterval,\n    repetitions: newRepetitions,\n    nextReview: nextReviewDate.toISOString(),\n    lastReview: now\n  };\n}\n\n/**\n * Pr√ºft ob eine Vokabel zur Wiederholung f√§llig ist\n */\nexport function isDue(vocab: VocabularyCard): boolean {\n  if (!vocab.sm2.nextReview) {\n    return true; // Neue Vokabeln sind immer f√§llig\n  }\n  \n  const now = new Date();\n  const nextReview = new Date(vocab.sm2.nextReview);\n  \n  return now >= nextReview;\n}\n\n/**\n * Filtert Vokabeln die zur Wiederholung f√§llig sind (mit Debug)\n */\nexport function getDueVocabulary(vocabulary: VocabularyCard[]): VocabularyCard[] {\n  console.log(`üîç Pr√ºfe ${vocabulary.length} Vokabeln auf F√§lligkeit...`);\n  \n  const due = vocabulary.filter(vocab => {\n    const result = isDue(vocab);\n    if (vocabulary.length <= 10) { // Nur bei wenigen Vokabeln detailliert loggen\n      console.log(`  ${vocab.kanji} (${vocab.id}): repetitions=${vocab.sm2.repetitions}, nextReview=${vocab.sm2.nextReview}, isDue=${result}`);\n    }\n    return result;\n  });\n  \n  console.log(`üìä Ergebnis: ${due.length} von ${vocabulary.length} Vokabeln sind f√§llig`);\n  return due;\n}\n\n/**\n * Sortiert Vokabeln nach Priorit√§t (√ºberf√§llige zuerst, dann nach Schwierigkeit)\n */\nexport function sortByPriority(vocabulary: VocabularyCard[]): VocabularyCard[] {\n  const now = new Date();\n  \n  return [...vocabulary].sort((a, b) => {\n    const aNextReview = a.sm2.nextReview ? new Date(a.sm2.nextReview) : new Date(0);\n    const bNextReview = b.sm2.nextReview ? new Date(b.sm2.nextReview) : new Date(0);\n    \n    // √úberf√§llige Vokabeln zuerst\n    const aOverdue = now.getTime() - aNextReview.getTime();\n    const bOverdue = now.getTime() - bNextReview.getTime();\n    \n    if (aOverdue !== bOverdue) {\n      return bOverdue - aOverdue; // Mehr √ºberf√§llig = h√∂here Priorit√§t\n    }\n    \n    // Bei gleicher √úberf√§lligkeit: niedrigerer Ease Factor = h√∂here Priorit√§t\n    return a.sm2.easeFactor - b.sm2.easeFactor;\n  });\n}\n\n/**\n * Gibt Statistiken √ºber den Lernfortschritt zur√ºck\n */\nexport function getLearningStats(vocabulary: VocabularyCard[]) {\n  const now = new Date();\n  \n  const stats = {\n    total: vocabulary.length,\n    new: 0,\n    learning: 0,\n    review: 0,\n    due: 0,\n    overdue: 0,\n    mastered: 0\n  };\n  \n  vocabulary.forEach(vocab => {\n    const { sm2 } = vocab;\n    \n    // Neue Vokabeln (noch nie gelernt)\n    if (sm2.repetitions === 0) {\n      stats.new++;\n      if (!sm2.nextReview || new Date(sm2.nextReview) <= now) {\n        stats.due++;\n      }\n      return;\n    }\n    \n    // Lernphase (1-2 Wiederholungen)\n    if (sm2.repetitions <= 2) {\n      stats.learning++;\n    } else if (sm2.repetitions >= 5 && sm2.easeFactor >= 2.5) {\n      // Gemeistert (5+ Wiederholungen mit gutem Ease Factor)\n      stats.mastered++;\n    } else {\n      // Wiederholung\n      stats.review++;\n    }\n    \n    // F√§lligkeitspr√ºfung\n    if (sm2.nextReview) {\n      const nextReview = new Date(sm2.nextReview);\n      if (nextReview <= now) {\n        stats.due++;\n        \n        // √úberf√§llig (mehr als 1 Tag)\n        const daysDiff = (now.getTime() - nextReview.getTime()) / (1000 * 60 * 60 * 24);\n        if (daysDiff > 1) {\n          stats.overdue++;\n        }\n      }\n    }\n  });\n  \n  return stats;\n}\n\n/**\n * Zentrale Farblogik f√ºr Qualit√§tswerte (0-5)\n */\nexport const QUALITY_COLORS = [\n  { value: 0, label: 'Keine Ahnung', tailwind: 'bg-rose-400', hex: '#fb7185' },\n  { value: 1, label: 'Falsch aber vertraut', tailwind: 'bg-rose-500', hex: '#f43f5e' },\n  { value: 2, label: 'Falsch aber erinnert', tailwind: 'bg-amber-400', hex: '#fbbf24' },\n  { value: 3, label: 'Richtig aber m√ºhsam', tailwind: 'bg-amber-500', hex: '#f59e42' },\n  { value: 4, label: 'Richtig nach Z√∂gern', tailwind: 'bg-teal-500', hex: '#14b8a6' },\n  { value: 5, label: 'Sofort richtig', tailwind: 'bg-emerald-500', hex: '#10b981' }\n] as const; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}