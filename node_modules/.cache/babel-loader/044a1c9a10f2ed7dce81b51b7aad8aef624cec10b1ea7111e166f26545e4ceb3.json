{"ast":null,"code":"import _objectSpread from\"/home/alex/italvoc/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from'react';import{ArrowLeft,Eye,EyeOff,AlertCircle}from'lucide-react';import{useVocabularyManager}from'../hooks/useVocabularyManager';import{useQuizSettings}from'./Settings';import{calculateSM2,getDueVocabulary,sortByPriority,QUALITY_COLORS}from'../utils/sm2Algorithm';import{PieChart,Pie,Cell,ResponsiveContainer,Tooltip}from'recharts';import{RepeatQuiz}from'./RepeatQuiz';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Quiz=_ref=>{let{mode,onBack,onComplete,repeatVocabulary}=_ref;const{vocabulary,updateSM2Data,isLoading}=useVocabularyManager();const quizSettings=useQuizSettings();// Zentrale States für Quiz-Flow\nconst[currentIndex,setCurrentIndex]=useState(0);const[isQuizComplete,setIsQuizComplete]=useState(false);const[showAnswer,setShowAnswer]=useState(false);const[currentDirection,setCurrentDirection]=useState('jp-to-de');const[showExitConfirm,setShowExitConfirm]=useState(false);const[repeatQuizState,setRepeatQuizState]=useState({show:false,vocabs:[]});// Statistiken und Ergebnisse\nconst[sessionStats,setSessionStats]=useState({correct:0,total:0,streak:0,maxStreak:0});const[results,setResults]=useState([]);// Vokabeln für das Quiz bestimmen\nconst quizVocabulary=useMemo(()=>{if(repeatVocabulary&&repeatVocabulary.length>0){console.log(\"\\uD83D\\uDD01 Wiederholungsquiz mit \".concat(repeatVocabulary.length,\" Vokabeln\"));return repeatVocabulary;}console.log(\"\\uD83C\\uDFAF Quiz-Modus: \".concat(mode,\", Verf\\xFCgbare Vokabeln: \").concat(vocabulary.length));let filtered=[];switch(mode){case'due':filtered=getDueVocabulary(vocabulary);break;case'new':filtered=vocabulary.filter(v=>v.sm2.repetitions===0);break;case'review':filtered=vocabulary.filter(v=>v.sm2.repetitions>0);break;case'random':filtered=[...vocabulary];break;}if(mode!=='random'){filtered=sortByPriority(filtered);}else{filtered=filtered.sort(()=>Math.random()-0.5);}const result=filtered.slice(0,quizSettings.wordsPerQuiz);return result;},[vocabulary,mode,quizSettings.wordsPerQuiz,repeatVocabulary]);// Quiz beenden wenn keine Vokabeln vorhanden\nuseEffect(()=>{if(!isLoading&&quizVocabulary.length===0){console.log('⚠️ Keine Quiz-Vokabeln verfügbar, beende Quiz');setTimeout(()=>onComplete&&onComplete(),1000);}},[isLoading,quizVocabulary.length,onComplete]);// Abfragerichtung für aktuelle Vokabel bestimmen\nuseEffect(()=>{if(quizSettings.direction==='random'){const directions=['jp-to-de','de-to-jp','kanji-to-reading'];const randomDirection=directions[Math.floor(Math.random()*directions.length)];setCurrentDirection(randomDirection);}else{setCurrentDirection(quizSettings.direction);}},[currentIndex,quizSettings.direction]);// States zurücksetzen, wenn ein neues Quiz (Modus oder Wiederholung) gestartet wird\nuseEffect(()=>{setCurrentIndex(0);setResults([]);setIsQuizComplete(false);setSessionStats({correct:0,total:0,streak:0,maxStreak:0});setShowAnswer(false);},[repeatVocabulary,mode]);// Antwort bewerten und zur nächsten Vokabel\nconst handleQualityRating=quality=>{// Sicherheitscheck\nif(!quizVocabulary[currentIndex]){console.error('Keine Vokabel verfügbar für Index:',currentIndex);return;}try{// SM-2 Berechnung\nconst sm2Result=calculateSM2(quizVocabulary[currentIndex],quality);// Daten aktualisieren\nupdateSM2Data(quizVocabulary[currentIndex].id,_objectSpread(_objectSpread({},sm2Result),{},{quality}));// Session-Statistiken aktualisieren\nconst isCorrect=quality>=3;setSessionStats(prev=>{const newStreak=isCorrect?prev.streak+1:0;return{correct:prev.correct+(isCorrect?1:0),total:prev.total+1,streak:newStreak,maxStreak:Math.max(prev.maxStreak,newStreak)};});// Ergebnis speichern\nsetResults(prev=>[...prev,{vocab:quizVocabulary[currentIndex],quality}]);// Quiz-Ende prüfen\nconst isLastCard=currentIndex+1>=quizVocabulary.length;if(isLastCard){console.log('🎯 Quiz abgeschlossen!');setIsQuizComplete(true);}else{// Zur nächsten Karte\nsetCurrentIndex(prev=>prev+1);setShowAnswer(false);}}catch(error){console.error('Fehler bei der Bewertung:',error);// Optional: Fehlerbehandlung für den Benutzer\n}};// Antwort anzeigen/verstecken\nconst toggleAnswer=()=>{setShowAnswer(!showAnswer);};// Ergebnisbildschirm\nif(isQuizComplete){const qualityCounts=QUALITY_COLORS.map(q=>_objectSpread(_objectSpread({},q),{},{count:results.filter(r=>r.quality===q.value).length})).filter(d=>d.count>0);const wrongVocabsResult=results.filter(r=>r.quality<3).map(r=>r.vocab);return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50 flex flex-col items-center justify-center p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-3xl shadow-2xl p-8 max-w-md w-full border border-amber-200/80 flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-light text-stone-800 mb-4\",children:\"Quiz-Ergebnis\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full flex flex-col items-center\",children:[/*#__PURE__*/_jsx(ResponsiveContainer,{width:220,height:220,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:qualityCounts,dataKey:\"count\",nameKey:\"label\",cx:\"50%\",cy:\"50%\",innerRadius:60,outerRadius:100,paddingAngle:2,children:qualityCounts.map((entry,idx)=>/*#__PURE__*/_jsx(Cell,{fill:entry.hex},\"cell-\".concat(idx)))}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value,\"x\")})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center gap-3 mt-4\",children:qualityCounts.map((entry,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 text-sm font-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"inline-block w-4 h-4 rounded-full\",style:{background:entry.hex}}),/*#__PURE__*/_jsx(\"span\",{children:entry.label})]},entry.label))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 w-full text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-light text-stone-700 mb-2\",children:[\"Richtige Antworten: \",results.filter(r=>r.quality>=3).length,\" / \",results.length]}),wrongVocabsResult.length>0?/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{if(typeof onComplete==='function'){onComplete(wrongVocabsResult);}},className:\"mt-2 px-6 py-3 bg-gradient-to-r from-rose-500 to-amber-600 text-white rounded-2xl shadow-lg font-light text-lg hover:from-rose-600 hover:to-amber-700 transition-all\",children:[\"Falsche wiederholen (\",wrongVocabsResult.length,\")\"]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-emerald-600 font-light mt-2\",children:\"Alle Vokabeln richtig! \\uD83C\\uDF89\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(typeof onComplete==='function'){onComplete();}},className:\"mt-4 px-6 py-3 bg-stone-300 text-stone-700 rounded-2xl shadow font-light text-base hover:bg-stone-400 transition-all\",children:\"Zur\\xFCck\"})]})]})});}// Wiederholungsquiz\nif(repeatQuizState.show){return/*#__PURE__*/_jsx(RepeatQuiz,{vocabulary:repeatQuizState.vocabs,onBack:()=>setRepeatQuizState({show:false,vocabs:[]}),onComplete:()=>onComplete&&onComplete()});}// Quiz-Karte\nif(currentIndex<quizVocabulary.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50 flex flex-col\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-gradient-to-r from-stone-700 via-amber-800 to-stone-800 text-amber-50 shadow-2xl px-4 py-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowExitConfirm(true),className:\"mr-2 p-2 hover:bg-stone-700/50 rounded-lg transition-all duration-300 min-h-[36px] min-w-[36px] flex items-center justify-center\",\"aria-label\":\"Zur\\xFCck\",children:/*#__PURE__*/_jsx(ArrowLeft,{size:20,className:\"text-amber-50 opacity-90\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 text-sm font-light\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-amber-100\",children:[currentIndex+1,\" von \",quizVocabulary.length]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-amber-100\",children:[\"Richtig: \",sessionStats.correct,\"/\",sessionStats.total]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-amber-200\",children:[\"Serie: \",sessionStats.streak]})]})}),/*#__PURE__*/_jsx(\"div\",{style:{width:36}})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-amber-50 to-stone-50 border-b border-amber-200/60 px-4 py-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-3 bg-stone-200 rounded-full overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-gradient-to-r from-amber-600 to-stone-700 transition-all duration-500 ease-out rounded-full\",style:{width:\"\".concat((currentIndex+1)/quizVocabulary.length*100,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-stone-500 text-center mt-1 font-light\",children:[Math.round((currentIndex+1)/quizVocabulary.length*100),\"% abgeschlossen\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col justify-center px-6 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-amber-25 via-stone-25 to-amber-50 rounded-3xl shadow-2xl p-6 mx-auto w-full max-w-lg border border-amber-100/80 relative\",style:{backgroundColor:'#fefdfb'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center px-5 py-2 bg-stone-100/80 text-stone-600 text-sm font-light rounded-full border border-stone-200/60 shadow-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-amber-600 rounded-full mr-3 opacity-80\"}),currentDirection==='jp-to-de'&&'Japanisch → Deutsch',currentDirection==='de-to-jp'&&'Deutsch → Japanisch',currentDirection==='kanji-to-reading'&&'Kanji → Lesung']})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center min-h-[120px] mb-4 gap-4\",children:[currentDirection==='jp-to-de'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row items-end justify-center gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl font-extralight text-stone-800 leading-tight\",style:{fontFamily:'serif'},children:quizVocabulary[currentIndex].kanji}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-start justify-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl text-stone-700 font-light\",children:quizVocabulary[currentIndex].kana}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg text-stone-500 font-light\",children:quizVocabulary[currentIndex].romaji})]})]}),currentDirection==='de-to-jp'&&/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-light text-stone-800 leading-tight tracking-wide mb-2\",children:quizVocabulary[currentIndex].de}),currentDirection==='kanji-to-reading'&&/*#__PURE__*/_jsx(\"div\",{className:\"text-7xl font-extralight text-stone-800 leading-tight mb-2\",style:{fontFamily:'serif'},children:quizVocabulary[currentIndex].kanji}),showAnswer&&/*#__PURE__*/_jsxs(\"div\",{className:\"w-full flex flex-col items-center justify-center mt-2\",children:[currentDirection==='jp-to-de'&&/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-light text-amber-800 tracking-wide bg-amber-50 rounded-xl px-6 py-3 shadow-inner border border-amber-100/60\",children:quizVocabulary[currentIndex].de}),currentDirection==='de-to-jp'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row items-end justify-center gap-6 mt-2 bg-amber-50 rounded-xl px-6 py-3 shadow-inner border border-amber-100/60\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-extralight text-stone-800\",style:{fontFamily:'serif'},children:quizVocabulary[currentIndex].kanji}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-start justify-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl text-stone-700 font-light\",children:quizVocabulary[currentIndex].kana}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg text-stone-500 font-light\",children:quizVocabulary[currentIndex].romaji})]})]}),currentDirection==='kanji-to-reading'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center gap-1 bg-amber-50 rounded-xl px-6 py-3 shadow-inner border border-amber-100/60\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-light text-amber-800 tracking-wide\",children:quizVocabulary[currentIndex].kana}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl text-stone-600 font-light\",children:quizVocabulary[currentIndex].romaji}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg text-stone-500 font-light mt-2\",children:quizVocabulary[currentIndex].de})]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleAnswer,className:\"w-full py-4 px-6 bg-gradient-to-r from-stone-600 to-amber-700 text-amber-50 rounded-2xl hover:from-stone-700 hover:to-amber-800 transition-all duration-500 font-light text-lg shadow-xl min-h-[56px] flex items-center justify-center tracking-wide mb-2\",children:showAnswer?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EyeOff,{size:22,className:\"mr-3 opacity-90\"}),\"Antwort verstecken\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Eye,{size:22,className:\"mr-3 opacity-90\"}),\"Antwort anzeigen\"]})}),showAnswer&&/*#__PURE__*/_jsx(\"div\",{className:\"w-full flex flex-col items-center mt-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full max-w-md mx-auto grid grid-cols-3 gap-3 bg-white/80 rounded-2xl shadow-2xl p-4 border border-amber-200/60\",children:QUALITY_COLORS.map(q=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleQualityRating(q.value),className:\"min-w-[90px] max-w-[120px] py-3 px-1 rounded-2xl text-white font-light text-center transition-all duration-200 shadow-lg text-[0.98rem] leading-tight \".concat(q.tailwind),style:{touchAction:'manipulation'},children:/*#__PURE__*/_jsx(\"span\",{className:\"block break-words whitespace-pre-line\",children:q.label})},q.value))})})]})}),showExitConfirm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/40 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-2xl p-6 shadow-2xl border border-amber-200/80 max-w-xs w-full mx-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center mb-4\",children:[/*#__PURE__*/_jsx(AlertCircle,{size:24,className:\"text-amber-600 mr-2\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-light text-stone-800\",children:\"Quiz beenden?\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-stone-600 font-light mb-6 text-center\",children:\"M\\xF6chtest du das Quiz wirklich beenden? Dein Fortschritt geht verloren.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowExitConfirm(false);onComplete&&onComplete();},className:\"w-full py-3 px-4 bg-gradient-to-r from-rose-500 to-amber-600 text-white rounded-xl font-light hover:from-rose-600 hover:to-amber-700 transition-all\",children:\"Quiz beenden\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowExitConfirm(false),className:\"w-full py-3 px-4 bg-stone-200 text-stone-700 rounded-xl font-light hover:bg-stone-300 transition-all\",children:\"Weiterlernen\"})]})]})})]});}// Ladeansicht\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-amber-700 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-light text-stone-800 mb-2 tracking-wide\",children:\"Quiz wird vorbereitet...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-stone-600 font-light\",children:\"Vokabeln werden geladen\"})]})});}return null;};","map":{"version":3,"names":["React","useState","useEffect","useMemo","ArrowLeft","Eye","EyeOff","AlertCircle","useVocabularyManager","useQuizSettings","calculateSM2","getDueVocabulary","sortByPriority","QUALITY_COLORS","PieChart","Pie","Cell","ResponsiveContainer","Tooltip","RepeatQuiz","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Quiz","_ref","mode","onBack","onComplete","repeatVocabulary","vocabulary","updateSM2Data","isLoading","quizSettings","currentIndex","setCurrentIndex","isQuizComplete","setIsQuizComplete","showAnswer","setShowAnswer","currentDirection","setCurrentDirection","showExitConfirm","setShowExitConfirm","repeatQuizState","setRepeatQuizState","show","vocabs","sessionStats","setSessionStats","correct","total","streak","maxStreak","results","setResults","quizVocabulary","length","console","log","concat","filtered","filter","v","sm2","repetitions","sort","Math","random","result","slice","wordsPerQuiz","setTimeout","direction","directions","randomDirection","floor","handleQualityRating","quality","error","sm2Result","id","_objectSpread","isCorrect","prev","newStreak","max","vocab","isLastCard","toggleAnswer","qualityCounts","map","q","count","r","value","d","wrongVocabsResult","className","children","width","height","data","dataKey","nameKey","cx","cy","innerRadius","outerRadius","paddingAngle","entry","idx","fill","hex","formatter","style","background","label","onClick","size","round","backgroundColor","fontFamily","kanji","kana","romaji","de","tailwind","touchAction"],"sources":["/home/alex/italvoc/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { ArrowLeft, Eye, EyeOff, AlertCircle } from 'lucide-react';\nimport { useVocabularyManager } from '../hooks/useVocabularyManager';\nimport { QuizMode } from './QuizSelection';\nimport { useQuizSettings, QuizDirection } from './Settings';\nimport { \n  calculateSM2, \n  getDueVocabulary, \n  sortByPriority, \n  QUALITY_COLORS \n} from '../utils/sm2Algorithm';\nimport { VocabularyCard } from '../types/vocabulary';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from 'recharts';\nimport { RepeatQuiz } from './RepeatQuiz';\n\ninterface QuizProps {\n  mode: QuizMode;\n  onBack: () => void;\n  onComplete?: (wrongVocabs?: VocabularyCard[]) => void;\n  repeatVocabulary?: VocabularyCard[];\n}\n\nexport const Quiz: React.FC<QuizProps> = ({\n  mode,\n  onBack,\n  onComplete,\n  repeatVocabulary\n}) => {\n  const { vocabulary, updateSM2Data, isLoading } = useVocabularyManager();\n  const quizSettings = useQuizSettings();\n  \n  // Zentrale States für Quiz-Flow\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [currentDirection, setCurrentDirection] = useState<QuizDirection>('jp-to-de');\n  const [showExitConfirm, setShowExitConfirm] = useState(false);\n  const [repeatQuizState, setRepeatQuizState] = useState<{ show: boolean, vocabs: VocabularyCard[] }>({ show: false, vocabs: [] });\n  \n  // Statistiken und Ergebnisse\n  const [sessionStats, setSessionStats] = useState({\n    correct: 0,\n    total: 0,\n    streak: 0,\n    maxStreak: 0\n  });\n  const [results, setResults] = useState<{vocab: VocabularyCard, quality: number}[]>([]);\n\n  // Vokabeln für das Quiz bestimmen\n  const quizVocabulary = useMemo(() => {\n    if (repeatVocabulary && repeatVocabulary.length > 0) {\n      console.log(`🔁 Wiederholungsquiz mit ${repeatVocabulary.length} Vokabeln`);\n      return repeatVocabulary;\n    }\n    console.log(`🎯 Quiz-Modus: ${mode}, Verfügbare Vokabeln: ${vocabulary.length}`);\n    let filtered: VocabularyCard[] = [];\n    switch (mode) {\n      case 'due':\n        filtered = getDueVocabulary(vocabulary);\n        break;\n      case 'new':\n        filtered = vocabulary.filter(v => v.sm2.repetitions === 0);\n        break;\n      case 'review':\n        filtered = vocabulary.filter(v => v.sm2.repetitions > 0);\n        break;\n      case 'random':\n        filtered = [...vocabulary];\n        break;\n    }\n    if (mode !== 'random') {\n      filtered = sortByPriority(filtered);\n    } else {\n      filtered = filtered.sort(() => Math.random() - 0.5);\n    }\n    const result = filtered.slice(0, quizSettings.wordsPerQuiz);\n    return result;\n  }, [vocabulary, mode, quizSettings.wordsPerQuiz, repeatVocabulary]);\n\n  // Quiz beenden wenn keine Vokabeln vorhanden\n  useEffect(() => {\n    if (!isLoading && quizVocabulary.length === 0) {\n      console.log('⚠️ Keine Quiz-Vokabeln verfügbar, beende Quiz');\n      setTimeout(() => onComplete && onComplete(), 1000);\n    }\n  }, [isLoading, quizVocabulary.length, onComplete]);\n\n  // Abfragerichtung für aktuelle Vokabel bestimmen\n  useEffect(() => {\n    if (quizSettings.direction === 'random') {\n      const directions: QuizDirection[] = ['jp-to-de', 'de-to-jp', 'kanji-to-reading'];\n      const randomDirection = directions[Math.floor(Math.random() * directions.length)];\n      setCurrentDirection(randomDirection);\n    } else {\n      setCurrentDirection(quizSettings.direction);\n    }\n  }, [currentIndex, quizSettings.direction]);\n\n  // States zurücksetzen, wenn ein neues Quiz (Modus oder Wiederholung) gestartet wird\n  useEffect(() => {\n    setCurrentIndex(0);\n    setResults([]);\n    setIsQuizComplete(false);\n    setSessionStats({ correct: 0, total: 0, streak: 0, maxStreak: 0 });\n    setShowAnswer(false);\n  }, [repeatVocabulary, mode]);\n\n  // Antwort bewerten und zur nächsten Vokabel\n  const handleQualityRating = (quality: number) => {\n    // Sicherheitscheck\n    if (!quizVocabulary[currentIndex]) {\n      console.error('Keine Vokabel verfügbar für Index:', currentIndex);\n      return;\n    }\n\n    try {\n      // SM-2 Berechnung\n      const sm2Result = calculateSM2(quizVocabulary[currentIndex], quality);\n      \n      // Daten aktualisieren\n      updateSM2Data(quizVocabulary[currentIndex].id, {\n        ...sm2Result,\n        quality\n      });\n      \n      // Session-Statistiken aktualisieren\n      const isCorrect = quality >= 3;\n      setSessionStats(prev => {\n        const newStreak = isCorrect ? prev.streak + 1 : 0;\n        return {\n          correct: prev.correct + (isCorrect ? 1 : 0),\n          total: prev.total + 1,\n          streak: newStreak,\n          maxStreak: Math.max(prev.maxStreak, newStreak)\n        };\n      });\n      \n      // Ergebnis speichern\n      setResults(prev => [...prev, { \n        vocab: quizVocabulary[currentIndex], \n        quality \n      }]);\n      \n      // Quiz-Ende prüfen\n      const isLastCard = currentIndex + 1 >= quizVocabulary.length;\n      if (isLastCard) {\n        console.log('🎯 Quiz abgeschlossen!');\n        setIsQuizComplete(true);\n      } else {\n        // Zur nächsten Karte\n        setCurrentIndex(prev => prev + 1);\n        setShowAnswer(false);\n      }\n    } catch (error) {\n      console.error('Fehler bei der Bewertung:', error);\n      // Optional: Fehlerbehandlung für den Benutzer\n    }\n  };\n\n  // Antwort anzeigen/verstecken\n  const toggleAnswer = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  // Ergebnisbildschirm\n  if (isQuizComplete) {\n    const qualityCounts = QUALITY_COLORS.map(q => ({\n      ...q,\n      count: results.filter(r => r.quality === q.value).length\n    })).filter(d => d.count > 0);\n    \n    const wrongVocabsResult = results.filter(r => r.quality < 3).map(r => r.vocab);\n    \n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50 flex flex-col items-center justify-center p-4\">\n        <div className=\"bg-white rounded-3xl shadow-2xl p-8 max-w-md w-full border border-amber-200/80 flex flex-col items-center\">\n          <h2 className=\"text-2xl font-light text-stone-800 mb-4\">Quiz-Ergebnis</h2>\n          <div className=\"w-full flex flex-col items-center\">\n            <ResponsiveContainer width={220} height={220}>\n              <PieChart>\n                <Pie\n                  data={qualityCounts}\n                  dataKey=\"count\"\n                  nameKey=\"label\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={100}\n                  paddingAngle={2}\n                >\n                  {qualityCounts.map((entry, idx) => (\n                    <Cell key={`cell-${idx}`} fill={entry.hex} />\n                  ))}\n                </Pie>\n                <Tooltip formatter={(value) => `${value}x`} />\n              </PieChart>\n            </ResponsiveContainer>\n            {/* Eigene Legende unterhalb des Charts */}\n            <div className=\"flex flex-wrap justify-center gap-3 mt-4\">\n              {qualityCounts.map((entry, idx) => (\n                <div key={entry.label} className=\"flex items-center space-x-2 text-sm font-light\">\n                  <span\n                    className=\"inline-block w-4 h-4 rounded-full\"\n                    style={{ background: entry.hex }}\n                  />\n                  <span>{entry.label}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"mt-6 w-full text-center\">\n            <div className=\"text-lg font-light text-stone-700 mb-2\">\n              Richtige Antworten: {results.filter(r => r.quality >= 3).length} / {results.length}\n            </div>\n            {wrongVocabsResult.length > 0 ? (\n              <button\n                onClick={() => {\n                  if (typeof onComplete === 'function') {\n                    onComplete(wrongVocabsResult);\n                  }\n                }}\n                className=\"mt-2 px-6 py-3 bg-gradient-to-r from-rose-500 to-amber-600 text-white rounded-2xl shadow-lg font-light text-lg hover:from-rose-600 hover:to-amber-700 transition-all\"\n              >\n                Falsche wiederholen ({wrongVocabsResult.length})\n              </button>\n            ) : (\n              <div className=\"text-emerald-600 font-light mt-2\">Alle Vokabeln richtig! 🎉</div>\n            )}\n            <button\n              onClick={() => {\n                if (typeof onComplete === 'function') {\n                  onComplete();\n                }\n              }}\n              className=\"mt-4 px-6 py-3 bg-stone-300 text-stone-700 rounded-2xl shadow font-light text-base hover:bg-stone-400 transition-all\"\n            >\n              Zurück\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Wiederholungsquiz\n  if (repeatQuizState.show) {\n    return (\n      <RepeatQuiz\n        vocabulary={repeatQuizState.vocabs}\n        onBack={() => setRepeatQuizState({ show: false, vocabs: [] })}\n        onComplete={() => onComplete && onComplete()}\n      />\n    );\n  }\n\n  // Quiz-Karte\n  if (currentIndex < quizVocabulary.length) {\n    return (\n      <div className=\"h-screen bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50 flex flex-col\">\n        {/* Header */}\n        <header className=\"bg-gradient-to-r from-stone-700 via-amber-800 to-stone-800 text-amber-50 shadow-2xl px-4 py-2\">\n          <div className=\"flex items-center justify-between\">\n            <button\n              onClick={() => setShowExitConfirm(true)}\n              className=\"mr-2 p-2 hover:bg-stone-700/50 rounded-lg transition-all duration-300 min-h-[36px] min-w-[36px] flex items-center justify-center\"\n              aria-label=\"Zurück\"\n            >\n              <ArrowLeft size={20} className=\"text-amber-50 opacity-90\" />\n            </button>\n            <div className=\"flex-1 flex flex-col items-center\">\n              <div className=\"flex items-center space-x-4 text-sm font-light\">\n                <span className=\"text-amber-100\">{currentIndex + 1} von {quizVocabulary.length}</span>\n                <span className=\"text-amber-100\">Richtig: {sessionStats.correct}/{sessionStats.total}</span>\n                <span className=\"text-amber-200\">Serie: {sessionStats.streak}</span>\n              </div>\n            </div>\n            <div style={{ width: 36 }} />\n          </div>\n        </header>\n\n        {/* Progress Bar */}\n        <div className=\"bg-gradient-to-r from-amber-50 to-stone-50 border-b border-amber-200/60 px-4 py-2\">\n          <div className=\"h-3 bg-stone-200 rounded-full overflow-hidden\">\n            <div \n              className=\"h-full bg-gradient-to-r from-amber-600 to-stone-700 transition-all duration-500 ease-out rounded-full\"\n              style={{ width: `${((currentIndex + 1) / quizVocabulary.length) * 100}%` }}\n            />\n          </div>\n          <div className=\"text-xs text-stone-500 text-center mt-1 font-light\">\n            {Math.round(((currentIndex + 1) / quizVocabulary.length) * 100)}% abgeschlossen\n          </div>\n        </div>\n\n        {/* Quiz Card */}\n        <div className=\"flex-1 flex flex-col justify-center px-6 py-4\">\n          <div className=\"bg-gradient-to-br from-amber-25 via-stone-25 to-amber-50 rounded-3xl shadow-2xl p-6 mx-auto w-full max-w-lg border border-amber-100/80 relative\" style={{ backgroundColor: '#fefdfb' }}>\n            {/* Abfragerichtung Indikator */}\n            <div className=\"text-center mb-4\">\n              <div className=\"inline-flex items-center px-5 py-2 bg-stone-100/80 text-stone-600 text-sm font-light rounded-full border border-stone-200/60 shadow-sm\">\n                <div className=\"w-2 h-2 bg-amber-600 rounded-full mr-3 opacity-80\"></div>\n                {currentDirection === 'jp-to-de' && 'Japanisch → Deutsch'}\n                {currentDirection === 'de-to-jp' && 'Deutsch → Japanisch'}\n                {currentDirection === 'kanji-to-reading' && 'Kanji → Lesung'}\n              </div>\n            </div>\n\n            {/* Frage/Auflösung */}\n            <div className=\"flex flex-col items-center justify-center min-h-[120px] mb-4 gap-4\">\n              {/* Frage */}\n              {currentDirection === 'jp-to-de' && (\n                <div className=\"flex flex-row items-end justify-center gap-6\">\n                  <div className=\"text-6xl font-extralight text-stone-800 leading-tight\" style={{ fontFamily: 'serif' }}>\n                    {quizVocabulary[currentIndex].kanji}\n                  </div>\n                  <div className=\"flex flex-col items-start justify-center gap-1\">\n                    <div className=\"text-2xl text-stone-700 font-light\">{quizVocabulary[currentIndex].kana}</div>\n                    <div className=\"text-lg text-stone-500 font-light\">{quizVocabulary[currentIndex].romaji}</div>\n                  </div>\n                </div>\n              )}\n              {currentDirection === 'de-to-jp' && (\n                <div className=\"text-4xl font-light text-stone-800 leading-tight tracking-wide mb-2\">\n                  {quizVocabulary[currentIndex].de}\n                </div>\n              )}\n              {currentDirection === 'kanji-to-reading' && (\n                <div className=\"text-7xl font-extralight text-stone-800 leading-tight mb-2\" style={{ fontFamily: 'serif' }}>\n                  {quizVocabulary[currentIndex].kanji}\n                </div>\n              )}\n\n              {/* Antwort */}\n              {showAnswer && (\n                <div className=\"w-full flex flex-col items-center justify-center mt-2\">\n                  {currentDirection === 'jp-to-de' && (\n                    <div className=\"text-3xl font-light text-amber-800 tracking-wide bg-amber-50 rounded-xl px-6 py-3 shadow-inner border border-amber-100/60\">\n                      {quizVocabulary[currentIndex].de}\n                    </div>\n                  )}\n                  {currentDirection === 'de-to-jp' && (\n                    <div className=\"flex flex-row items-end justify-center gap-6 mt-2 bg-amber-50 rounded-xl px-6 py-3 shadow-inner border border-amber-100/60\">\n                      <div className=\"text-3xl font-extralight text-stone-800\" style={{ fontFamily: 'serif' }}>{quizVocabulary[currentIndex].kanji}</div>\n                      <div className=\"flex flex-col items-start justify-center gap-1\">\n                        <div className=\"text-2xl text-stone-700 font-light\">{quizVocabulary[currentIndex].kana}</div>\n                        <div className=\"text-lg text-stone-500 font-light\">{quizVocabulary[currentIndex].romaji}</div>\n                      </div>\n                    </div>\n                  )}\n                  {currentDirection === 'kanji-to-reading' && (\n                    <div className=\"flex flex-col items-center justify-center gap-1 bg-amber-50 rounded-xl px-6 py-3 shadow-inner border border-amber-100/60\">\n                      <div className=\"text-3xl font-light text-amber-800 tracking-wide\">{quizVocabulary[currentIndex].kana}</div>\n                      <div className=\"text-2xl text-stone-600 font-light\">{quizVocabulary[currentIndex].romaji}</div>\n                      <div className=\"text-lg text-stone-500 font-light mt-2\">{quizVocabulary[currentIndex].de}</div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Antwort anzeigen/verstecken Button */}\n            <button\n              onClick={toggleAnswer}\n              className=\"w-full py-4 px-6 bg-gradient-to-r from-stone-600 to-amber-700 text-amber-50 rounded-2xl hover:from-stone-700 hover:to-amber-800 transition-all duration-500 font-light text-lg shadow-xl min-h-[56px] flex items-center justify-center tracking-wide mb-2\"\n            >\n              {showAnswer ? (\n                <>\n                  <EyeOff size={22} className=\"mr-3 opacity-90\" />\n                  Antwort verstecken\n                </>\n              ) : (\n                <>\n                  <Eye size={22} className=\"mr-3 opacity-90\" />\n                  Antwort anzeigen\n                </>\n              )}\n            </button>\n\n            {/* Antwort-Buttons */}\n            {showAnswer && (\n              <div className=\"w-full flex flex-col items-center mt-4\">\n                <div className=\"w-full max-w-md mx-auto grid grid-cols-3 gap-3 bg-white/80 rounded-2xl shadow-2xl p-4 border border-amber-200/60\">\n                  {QUALITY_COLORS.map(q => (\n                    <button\n                      key={q.value}\n                      onClick={() => handleQualityRating(q.value)}\n                      className={`min-w-[90px] max-w-[120px] py-3 px-1 rounded-2xl text-white font-light text-center transition-all duration-200 shadow-lg text-[0.98rem] leading-tight ${q.tailwind}`}\n                      style={{ touchAction: 'manipulation' }}\n                    >\n                      <span className=\"block break-words whitespace-pre-line\">{q.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Exit Confirmation Modal */}\n        {showExitConfirm && (\n          <div className=\"fixed inset-0 bg-black/40 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-2xl p-6 shadow-2xl border border-amber-200/80 max-w-xs w-full mx-4\">\n              <div className=\"flex items-center justify-center mb-4\">\n                <AlertCircle size={24} className=\"text-amber-600 mr-2\" />\n                <h3 className=\"text-lg font-light text-stone-800\">Quiz beenden?</h3>\n              </div>\n              <p className=\"text-stone-600 font-light mb-6 text-center\">\n                Möchtest du das Quiz wirklich beenden? Dein Fortschritt geht verloren.\n              </p>\n              <div className=\"flex flex-col space-y-2\">\n                <button\n                  onClick={() => {\n                    setShowExitConfirm(false);\n                    onComplete && onComplete();\n                  }}\n                  className=\"w-full py-3 px-4 bg-gradient-to-r from-rose-500 to-amber-600 text-white rounded-xl font-light hover:from-rose-600 hover:to-amber-700 transition-all\"\n                >\n                  Quiz beenden\n                </button>\n                <button\n                  onClick={() => setShowExitConfirm(false)}\n                  className=\"w-full py-3 px-4 bg-stone-200 text-stone-700 rounded-xl font-light hover:bg-stone-300 transition-all\"\n                >\n                  Weiterlernen\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Ladeansicht\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-amber-700 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-light text-stone-800 mb-2 tracking-wide\">Quiz wird vorbereitet...</h2>\n          <p className=\"text-stone-600 font-light\">Vokabeln werden geladen</p>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}