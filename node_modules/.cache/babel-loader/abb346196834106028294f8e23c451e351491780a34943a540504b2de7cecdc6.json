{"ast":null,"code":"import React,{useState}from'react';import{TabBar}from'./components/TabBar';import{QuizTab}from'./components/QuizTab';import{VocabularyTab}from'./components/VocabularyTab';import{StatsTab}from'./components/StatsTab';import{AddVocabulary}from'./components/AddVocabulary';import{EditVocabulary}from'./components/EditVocabulary';import{Quiz}from'./components/Quiz';import{Settings}from'./components/Settings';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentView,setCurrentView]=useState('tab');const[activeTab,setActiveTab]=useState('quiz');const[editingVocabId,setEditingVocabId]=useState(null);const[quizMode,setQuizMode]=useState('due');const[repeatVocabulary,setRepeatVocabulary]=useState(null);// Handler für Vokabel-Aktionen\nconst handleEditVocab=vocab=>{setEditingVocabId(vocab.id);setCurrentView('edit');};const handleDeleteVocab=vocab=>{// Wird direkt in der Suchkomponente über den Manager gehandhabt\nconsole.log('Lösche Vokabel:',vocab);};// Navigation Handler\nconst navigateTo=view=>{setCurrentView(view);};// Tab Handler\nconst handleTabChange=tab=>{setActiveTab(tab);setCurrentView('tab');};// Render verschiedene Views\nif(currentView==='add'){return/*#__PURE__*/_jsx(AddVocabulary,{onBack:()=>{setActiveTab('vocabulary');navigateTo('tab');},onSuccess:()=>{// Nach erfolgreichem Hinzufügen zu Vokabeln-Tab wechseln\nsetTimeout(()=>{setActiveTab('vocabulary');navigateTo('tab');},2000);}});}if(currentView==='edit'&&editingVocabId){return/*#__PURE__*/_jsx(EditVocabulary,{vocabId:editingVocabId,onBack:()=>{setEditingVocabId(null);setActiveTab('vocabulary');navigateTo('tab');},onSuccess:()=>{// Nach erfolgreichem Bearbeiten zu Vokabeln-Tab zurück\nsetTimeout(()=>{setEditingVocabId(null);setActiveTab('vocabulary');navigateTo('tab');},2000);},onDelete:()=>{setEditingVocabId(null);setActiveTab('vocabulary');navigateTo('tab');}});}if(currentView==='quiz'){return/*#__PURE__*/_jsx(Quiz,{mode:quizMode,repeatVocabulary:repeatVocabulary||undefined,onBack:()=>{setRepeatVocabulary(null);setActiveTab('quiz');navigateTo('tab');},onComplete:wrongVocabs=>{if(wrongVocabs&&wrongVocabs.length>0){setRepeatVocabulary(wrongVocabs);// Quiz wird mit repeatVocabulary neu gestartet\n}else{setRepeatVocabulary(null);setActiveTab('quiz');navigateTo('tab');}}});}if(currentView==='settings'){return/*#__PURE__*/_jsx(Settings,{});}// Tab-basierte Navigation (Standard)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-hidden\",children:[activeTab==='quiz'&&/*#__PURE__*/_jsx(QuizTab,{onStartQuiz:mode=>{setQuizMode(mode);navigateTo('quiz');},onSettings:()=>navigateTo('settings')}),activeTab==='vocabulary'&&/*#__PURE__*/_jsx(VocabularyTab,{onEditVocab:handleEditVocab,onAddVocab:()=>navigateTo('add')}),activeTab==='stats'&&/*#__PURE__*/_jsx(StatsTab,{}),activeTab==='settings'&&/*#__PURE__*/_jsx(Settings,{})]}),/*#__PURE__*/_jsx(TabBar,{activeTab:activeTab,onTabChange:handleTabChange})]});}export default App;","map":{"version":3,"names":["React","useState","TabBar","QuizTab","VocabularyTab","StatsTab","AddVocabulary","EditVocabulary","Quiz","Settings","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","activeTab","setActiveTab","editingVocabId","setEditingVocabId","quizMode","setQuizMode","repeatVocabulary","setRepeatVocabulary","handleEditVocab","vocab","id","handleDeleteVocab","console","log","navigateTo","view","handleTabChange","tab","onBack","onSuccess","setTimeout","vocabId","onDelete","mode","undefined","onComplete","wrongVocabs","length","className","children","onStartQuiz","onSettings","onEditVocab","onAddVocab","onTabChange"],"sources":["/home/alex/italvoc/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TabBar, TabType } from './components/TabBar';\nimport { QuizTab } from './components/QuizTab';\nimport { VocabularyTab } from './components/VocabularyTab';\nimport { StatsTab } from './components/StatsTab';\nimport { AddVocabulary } from './components/AddVocabulary';\nimport { EditVocabulary } from './components/EditVocabulary';\nimport { QuizMode } from './components/QuizSelection';\nimport { Quiz } from './components/Quiz';\nimport { Settings } from './components/Settings';\n\nimport { VocabularyCard as VocabType } from './types/vocabulary';\n\ntype AppView = 'tab' | 'add' | 'quiz' | 'settings' | 'edit';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState<AppView>('tab');\n  const [activeTab, setActiveTab] = useState<TabType>('quiz');\n  const [editingVocabId, setEditingVocabId] = useState<string | null>(null);\n  const [quizMode, setQuizMode] = useState<QuizMode>('due');\n  const [repeatVocabulary, setRepeatVocabulary] = useState<VocabType[] | null>(null);\n\n  // Handler für Vokabel-Aktionen\n  const handleEditVocab = (vocab: VocabType) => {\n    setEditingVocabId(vocab.id);\n    setCurrentView('edit');\n  };\n\n  const handleDeleteVocab = (vocab: VocabType) => {\n    // Wird direkt in der Suchkomponente über den Manager gehandhabt\n    console.log('Lösche Vokabel:', vocab);\n  };\n\n  // Navigation Handler\n  const navigateTo = (view: AppView) => {\n    setCurrentView(view);\n  };\n\n  // Tab Handler\n  const handleTabChange = (tab: TabType) => {\n    setActiveTab(tab);\n    setCurrentView('tab');\n  };\n\n  // Render verschiedene Views\n\n  if (currentView === 'add') {\n    return (\n      <AddVocabulary\n        onBack={() => {\n          setActiveTab('vocabulary');\n          navigateTo('tab');\n        }}\n        onSuccess={() => {\n          // Nach erfolgreichem Hinzufügen zu Vokabeln-Tab wechseln\n          setTimeout(() => {\n            setActiveTab('vocabulary');\n            navigateTo('tab');\n          }, 2000);\n        }}\n      />\n    );\n  }\n\n  if (currentView === 'edit' && editingVocabId) {\n    return (\n      <EditVocabulary\n        vocabId={editingVocabId}\n        onBack={() => {\n          setEditingVocabId(null);\n          setActiveTab('vocabulary');\n          navigateTo('tab');\n        }}\n        onSuccess={() => {\n          // Nach erfolgreichem Bearbeiten zu Vokabeln-Tab zurück\n          setTimeout(() => {\n            setEditingVocabId(null);\n            setActiveTab('vocabulary');\n            navigateTo('tab');\n          }, 2000);\n        }}\n        onDelete={() => {\n          setEditingVocabId(null);\n          setActiveTab('vocabulary');\n          navigateTo('tab');\n        }}\n      />\n    );\n  }\n\n  if (currentView === 'quiz') {\n    return (\n      <Quiz\n        mode={quizMode}\n        repeatVocabulary={repeatVocabulary || undefined}\n        onBack={() => {\n          setRepeatVocabulary(null);\n          setActiveTab('quiz');\n          navigateTo('tab');\n        }}\n        onComplete={(wrongVocabs?: VocabType[]) => {\n          if (wrongVocabs && wrongVocabs.length > 0) {\n            setRepeatVocabulary(wrongVocabs);\n            // Quiz wird mit repeatVocabulary neu gestartet\n          } else {\n            setRepeatVocabulary(null);\n            setActiveTab('quiz');\n            navigateTo('tab');\n          }\n        }}\n      />\n    );\n  }\n\n  if (currentView === 'settings') {\n    return <Settings />;\n  }\n\n  // Tab-basierte Navigation (Standard)\n  return (\n    <div className=\"h-screen flex flex-col bg-gradient-to-br from-amber-50 via-stone-50 to-orange-50\">\n      {/* Tab Content */}\n      <div className=\"flex-1 overflow-hidden\">\n        {activeTab === 'quiz' && (\n          <QuizTab\n            onStartQuiz={(mode) => {\n              setQuizMode(mode);\n              navigateTo('quiz');\n            }}\n            onSettings={() => navigateTo('settings')}\n          />\n        )}\n        \n        {activeTab === 'vocabulary' && (\n          <VocabularyTab\n            onEditVocab={handleEditVocab}\n            onAddVocab={() => navigateTo('add')}\n          />\n        )}\n        \n        {activeTab === 'stats' && <StatsTab />}\n        \n        {activeTab === 'settings' && <Settings />}\n      </div>\n\n      {/* Tab Bar */}\n      <TabBar activeTab={activeTab} onTabChange={handleTabChange} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAiB,qBAAqB,CACrD,OAASC,OAAO,KAAQ,sBAAsB,CAC9C,OAASC,aAAa,KAAQ,4BAA4B,CAC1D,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,aAAa,KAAQ,4BAA4B,CAC1D,OAASC,cAAc,KAAQ,6BAA6B,CAE5D,OAASC,IAAI,KAAQ,mBAAmB,CACxC,OAASC,QAAQ,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMjD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAU,KAAK,CAAC,CAC9D,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAU,MAAM,CAAC,CAC3D,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGnB,QAAQ,CAAgB,IAAI,CAAC,CACzE,KAAM,CAACoB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAW,KAAK,CAAC,CACzD,KAAM,CAACsB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGvB,QAAQ,CAAqB,IAAI,CAAC,CAElF;AACA,KAAM,CAAAwB,eAAe,CAAIC,KAAgB,EAAK,CAC5CN,iBAAiB,CAACM,KAAK,CAACC,EAAE,CAAC,CAC3BX,cAAc,CAAC,MAAM,CAAC,CACxB,CAAC,CAED,KAAM,CAAAY,iBAAiB,CAAIF,KAAgB,EAAK,CAC9C;AACAG,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEJ,KAAK,CAAC,CACvC,CAAC,CAED;AACA,KAAM,CAAAK,UAAU,CAAIC,IAAa,EAAK,CACpChB,cAAc,CAACgB,IAAI,CAAC,CACtB,CAAC,CAED;AACA,KAAM,CAAAC,eAAe,CAAIC,GAAY,EAAK,CACxChB,YAAY,CAACgB,GAAG,CAAC,CACjBlB,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED;AAEA,GAAID,WAAW,GAAK,KAAK,CAAE,CACzB,mBACEJ,IAAA,CAACL,aAAa,EACZ6B,MAAM,CAAEA,CAAA,GAAM,CACZjB,YAAY,CAAC,YAAY,CAAC,CAC1Ba,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,CACFK,SAAS,CAAEA,CAAA,GAAM,CACf;AACAC,UAAU,CAAC,IAAM,CACfnB,YAAY,CAAC,YAAY,CAAC,CAC1Ba,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,IAAI,CAAC,CACV,CAAE,CACH,CAAC,CAEN,CAEA,GAAIhB,WAAW,GAAK,MAAM,EAAII,cAAc,CAAE,CAC5C,mBACER,IAAA,CAACJ,cAAc,EACb+B,OAAO,CAAEnB,cAAe,CACxBgB,MAAM,CAAEA,CAAA,GAAM,CACZf,iBAAiB,CAAC,IAAI,CAAC,CACvBF,YAAY,CAAC,YAAY,CAAC,CAC1Ba,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,CACFK,SAAS,CAAEA,CAAA,GAAM,CACf;AACAC,UAAU,CAAC,IAAM,CACfjB,iBAAiB,CAAC,IAAI,CAAC,CACvBF,YAAY,CAAC,YAAY,CAAC,CAC1Ba,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,IAAI,CAAC,CACV,CAAE,CACFQ,QAAQ,CAAEA,CAAA,GAAM,CACdnB,iBAAiB,CAAC,IAAI,CAAC,CACvBF,YAAY,CAAC,YAAY,CAAC,CAC1Ba,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,CACH,CAAC,CAEN,CAEA,GAAIhB,WAAW,GAAK,MAAM,CAAE,CAC1B,mBACEJ,IAAA,CAACH,IAAI,EACHgC,IAAI,CAAEnB,QAAS,CACfE,gBAAgB,CAAEA,gBAAgB,EAAIkB,SAAU,CAChDN,MAAM,CAAEA,CAAA,GAAM,CACZX,mBAAmB,CAAC,IAAI,CAAC,CACzBN,YAAY,CAAC,MAAM,CAAC,CACpBa,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,CACFW,UAAU,CAAGC,WAAyB,EAAK,CACzC,GAAIA,WAAW,EAAIA,WAAW,CAACC,MAAM,CAAG,CAAC,CAAE,CACzCpB,mBAAmB,CAACmB,WAAW,CAAC,CAChC;AACF,CAAC,IAAM,CACLnB,mBAAmB,CAAC,IAAI,CAAC,CACzBN,YAAY,CAAC,MAAM,CAAC,CACpBa,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAE,CACH,CAAC,CAEN,CAEA,GAAIhB,WAAW,GAAK,UAAU,CAAE,CAC9B,mBAAOJ,IAAA,CAACF,QAAQ,GAAE,CAAC,CACrB,CAEA;AACA,mBACEI,KAAA,QAAKgC,SAAS,CAAC,kFAAkF,CAAAC,QAAA,eAE/FjC,KAAA,QAAKgC,SAAS,CAAC,wBAAwB,CAAAC,QAAA,EACpC7B,SAAS,GAAK,MAAM,eACnBN,IAAA,CAACR,OAAO,EACN4C,WAAW,CAAGP,IAAI,EAAK,CACrBlB,WAAW,CAACkB,IAAI,CAAC,CACjBT,UAAU,CAAC,MAAM,CAAC,CACpB,CAAE,CACFiB,UAAU,CAAEA,CAAA,GAAMjB,UAAU,CAAC,UAAU,CAAE,CAC1C,CACF,CAEAd,SAAS,GAAK,YAAY,eACzBN,IAAA,CAACP,aAAa,EACZ6C,WAAW,CAAExB,eAAgB,CAC7ByB,UAAU,CAAEA,CAAA,GAAMnB,UAAU,CAAC,KAAK,CAAE,CACrC,CACF,CAEAd,SAAS,GAAK,OAAO,eAAIN,IAAA,CAACN,QAAQ,GAAE,CAAC,CAErCY,SAAS,GAAK,UAAU,eAAIN,IAAA,CAACF,QAAQ,GAAE,CAAC,EACtC,CAAC,cAGNE,IAAA,CAACT,MAAM,EAACe,SAAS,CAAEA,SAAU,CAACkC,WAAW,CAAElB,eAAgB,CAAE,CAAC,EAC3D,CAAC,CAEV,CAEA,cAAe,CAAAnB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}